Что такое Django? Какие основные преимущества этого фреймворка?

Что такое ORM? Какие преимущества и недостатки у ORM в Django?

Объясните жизненный цикл запроса в Django.

Что такое middleware? Можете ли вы привести примеры и объяснить, как добавить свой middleware?

Как в Django работает система миграций? Как создать и применить миграцию?

Объясните разницу между ListView и DetailView.

Что такое и для чего используется signals в Django?

Каким образом можно оптимизировать запросы к базе данных в Django? Что такое select_related и prefetch_related?

Как в Django обеспечивается безопасность? Как предотвратить атаки типа CSRF, SQL-инъекции и XSS?

Что такое Django Rest Framework? Какие его особенности и преимущества?

Как вы можете кэшировать данные в Django? Объясните различные уровни кэширования.

Как обеспечивается аутентификация и авторизация пользователей в Django?

Что такое и для чего используются Generic Views в Django?

Как создать пользовательские команды для manage.py?

Объясните, что такое context processors.

Каким образом можно расширять функциональность админ-панели Django?

Что такое Django Channels? Какие задачи с его помощью можно решить?

Что такое Django Forms? Как создать пользовательскую форму и обработать данные из неё?

Что такое fixtures в Django? Как вы можете использовать их для загрузки и выгрузки данных?

Как вы можете использовать Django совместно с другими технологиями, такими как Celery или Redis?

Это общие вопросы, и на практике могут встретиться и другие, более специфические или зависящие от требований конкретной компании или проекта. На подобных вопросах хорошо видно как базовые знания кандидата, так и его опыт решения реальных практических задач.





